install.packages("sqldf")
install.packages("XLConnect")
getwd
getwd()
library(sqldf)
dbcon <- dbConnect(SQLite(),dbname = "gbwc_fin.sqlite")
dbListTables(dbcon)
dbWriteTable(conn=dbcon,name="gbwc_financial", value = "wc_financial.csv",row.names=FALSE,header = TRUE)
dbWriteTable(conn=dbcon,name="gbwc_financial", value = "wc_financial.csv",row.names=FALSE,header = TRUE)
dbWriteTable(conn=dbcon,name="gbwc_financial", value = "wc_financial.csv",row.names=FALSE,header = TRUE,sep = ",",quote = "")
dbWriteTable(conn=dbcon,name="gbwc_financial", value = "wc_financial.xlsx",row.names=FALSE,header = TRUE)
dbWriteTable(conn=dbcon,name="gbwc_financial", value = "wc_financial.text",row.names=FALSE,header = TRUE, sep = "tab")
dbWriteTable(conn=dbcon,name="gbwc_financial", value = "wc_financial.txt",row.names=FALSE,header = TRUE, sep = "tab")
dbWriteTable(conn=dbcon,name="gbwc_financial", value = "wc_financial.txt",row.names=FALSE,header = TRUE, sep = "tab")
dbWriteTable(conn=dbcon,name="gbwc_financial", value = "wc_financial.txt",row.names=FALSE,header = TRUE, sep = "\t")
dbListTables(dbcon)
library(shiny)
apppath = "C:\\Users\\u041018\\Documents\\GitHub\\wc_financial"
shiny::runApp(appDir = apppath)
library(sqldf)
wcdb <- dbConnect(SQLite(),dbname="gbwc_finn.sqlite")
wcdb.close()
library(sqldf)
wcdb <- dbConnect(SQLite(),dbname="gbwc_fin.sqlite")
dbListTables(wcdb)
dbListFields(gbwc_fin,"gbwc_financial")
dbListFields(wcdb,"gbwc_financial")
sqldf("select * from gbwc_financial",dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where CLM_FILE_STAT_NA = ''",dbname = "gbwc_fin.sqlite")
shiny::runApp()
runApp()
dbListTables(wcdb)
sqldf("select * from gbwc_financial where LS_D > 2016-01-01", dbname = "gbwc_fin.sqlite)
sqldf("select * from gbwc_financial where LS_D > 2016-01-01", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D > 2016-05-01", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D > '2016-05-01'", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D > '2016-01-01'", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D > '2016-04-01'", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D > '2016-04-030'", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D > '2016-05-01'", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D > '2016-04-30'", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D > '2016-04-29'", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D > '2016-04-20'", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D > '2016-04-25'", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D > '2016-04-26'", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D < '1980-04-26'", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D < '1990-01-01'", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D < '1995-01-01'", dbname = "gbwc_fin.sqlite")
sqldf("select * from gbwc_financial where LS_D < '1990-01-01'", dbname = "gbwc_fin.sqlite")
library(ggvis)
library(dplyr)
if (FALSE) library(RSQLite)
db <- src_sqlite("gbwc_fin.sqlite")
CPfindb <- tbl(db, "gbwc_financial")
all_records <- inner_join(CPfindb, CPfindb, by = "CLM_SRC_SYS_UNQ_ID") %>%
filter(Reviews >= 10) %>%
select(CLM_ID=CLM_SRC_SYS_UNQ_ID, LS_D = LS_D.x, LS_RPTD_D = LS_RPTD_D.x, CLM_FILE_STAT_C = CLM_FILE_STAT_C.x, CLMOC_CLSD_D = CLMOC_CLSD_D.x,
CLMOC_REOPN_D = CLMOC_REOPN_D.x, NA_INSD_NA = NA_INSD_NA.x, DAYS_LS_RPTD = DAYS_LS_RPTD.x, CTTD_TOT_RPTD_A = CTTD_TOT_RPTD_A.x)
all_records <- inner_join(CPfindb, CPfindb, by = "CLM_SRC_SYS_UNQ_ID") %>%
filter(LS_D >= '1987-01-01') %>%
select(CLM_ID=CLM_SRC_SYS_UNQ_ID, LS_D = LS_D.x, LS_RPTD_D = LS_RPTD_D.x, CLM_FILE_STAT_C = CLM_FILE_STAT_C.x, CLMOC_CLSD_D = CLMOC_CLSD_D.x,
CLMOC_REOPN_D = CLMOC_REOPN_D.x, NA_INSD_NA = NA_INSD_NA.x, DAYS_LS_RPTD = DAYS_LS_RPTD.x, CTTD_TOT_RPTD_A = CTTD_TOT_RPTD_A.x)
c("Closed","Open")),
c("Closed","Open"))#,
),
#  )
runApp()
dblistFields(wcdb,"gbwc_financial")
dbListFields(wcdb,"gbwc_financial")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
apppath
runApp(display.mode="showcase")
db <- src_sqlite("gbwc_fin.sqlite")
CPfindb <- tbl(db, "gbwc_financial")
all_fin_records <- inner_join(CPfindb, CPfindb, by = "CLM_SRC_SYS_UNQ_ID") %>%
filter(LS_D >= '1987-01-01', LS_D <= '2017-01-01') %>%
select(CLM_ID=CLM_SRC_SYS_UNQ_ID, LS_D = LS_D.x, LS_RPTD_D = LS_RPTD_D.x, CLM_FILE_STAT_C = CLM_FILE_STAT_C.x, CLMOC_CLSD_D = CLMOC_CLSD_D.x,
CLMOC_REOPN_D = CLMOC_REOPN_D.x, NA_INSD_NA = NA_INSD_NA.x, DAYS_LS_RPTD = DAYS_LS_RPTD.x, CTTD_TOT_RPTD_A = CTTD_TOT_RPTD_A.x)
all_fin_records
nrow(all_fin_records)
test <- data.frame(all_fin_records)
test <- data.frame(all_fin_records, n=-1)
head(test)
if (claim_file_status != "All") {
claim_status <- paste0("%", CLM_FILE_STAT_C, "%")
w <- w %>% filter(claim_file_status %like% claim_status)
}
runApp()
runApp()
runApp()
paste0("%", CLM_FILE_STAT_C, "%")
paste0("%", "CLM_FILE_STAT_C", "%")
runApp()
runApp()
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp()
runApp()
runApp(display.mode="showcase")
options(shiny.reactlog=TRUE)
runApp()
runApp()
options(shiny.error=browser)
runApp(display.mode="showcase")
print(3+5)
print("3+5")
runApp()
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
runApp(display.mode="showcase")
